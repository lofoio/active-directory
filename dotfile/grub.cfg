#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
insmod part_gpt
insmod part_msdos
if [ -s $prefix/grubenv ]; then
  load_env
fi
set default="0"

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

terminal_input console
terminal_output console
set timeout=3
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_linux ###
menuentry 'Arch GNU/Linux, with Linux core repo kernel' --class arch --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-core repo kernel-true-20e5ee5b-0c84-4458-bbc8-512152752109' {
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_msdos
	insmod ext2
	set root='hd0,msdos3'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos3 --hint-efi=hd0,msdos3 --hint-baremetal=ahci0,msdos3 --hint='hd0,msdos3'  846859c3-130a-434d-bb39-b2afbc0b61c5
	else
	  search --no-floppy --fs-uuid --set=root 846859c3-130a-434d-bb39-b2afbc0b61c5
	fi
	echo	'Loading Linux core repo kernel ...'
	linux	/vmlinuz-linux root=/dev/sda6 ro
	echo	'Loading initial ramdisk ...'
	initrd	/initramfs-linux.img
}
menuentry 'Arch GNU/Linux, with Linux core repo kernel (Fallback initramfs)' --class arch --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-core repo kernel-fallback-20e5ee5b-0c84-4458-bbc8-512152752109' {
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_msdos
	insmod ext2
	set root='hd0,msdos3'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos3 --hint-efi=hd0,msdos3 --hint-baremetal=ahci0,msdos3 --hint='hd0,msdos3'  846859c3-130a-434d-bb39-b2afbc0b61c5
	else
	  search --no-floppy --fs-uuid --set=root 846859c3-130a-434d-bb39-b2afbc0b61c5
	fi
	echo	'Loading Linux core repo kernel ...'
	linux	/vmlinuz-linux root=/dev/sda6 ro
	echo	'Loading initial ramdisk ...'
	initrd	/initramfs-linux-fallback.img
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###
### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/20_memtest86+ ###
### END /etc/grub.d/20_memtest86+ ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
# menuentry "Ubuntu 12.04 ISO" {
# set isofile="/ubuntu-12.10-desktop-amd64.iso"
# loopback loop (hd0,7)$isofile
# linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject toram
# initrd (loop)/casper/initrd.lz
# }
# menuentry 'Archlinux'  {
# 	set gfxpayload=$linux_gfx_mode
# 	insmod part_msdos
# 	insmod ext2
# 	set root='(hd0,msdos3)'
# 	search --no-floppy --fs-uuid --set=root 846859c3-130a-434d-bb39-b2afbc0b61c5
# 	linux	/vmlinuz-linux root=/dev/sda8 ro video=1280x800
# 	initrd	/initramfs-linux.img
# }
menuentry "Microsoft Windows XP Professional" --class windows --class os {
	insmod part_msdos
	insmod ntfs
	set root='(hd0,msdos1)'
	search --no-floppy --fs-uuid --set=root 06D07950D07946C9
	drivemap -s (hd0) ${root}
	chainloader +1
}
menuentry "Archlinux" {
    set isofile="/archlinux.iso"
    loopback loop (hd0,4)$isofile
    linux (loop)/arch/boot/x86_64/vmlinuz archisolabel=ARCH img_dev=/dev/sda4 img_loop=$isofile earlymodules=loop
    initrd (loop)/arch/boot/x86_64/archiso.img
}
menuentry 'archlinux-iso' {
set isofile="archlinux.iso"
loopback loop (hd0,4)/$isofile
linux (loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/sda4 img_loop=$isofile
initrd (loop)/arch/boot/x86_64/archiso.img
}
# menuentry 'Ubuntu, with Linux 2.6.38-16-generic' --class ubuntu --class gnu-linux --class gnu --class os {
# 	set gfxpayload=$linux_gfx_mode
# 	insmod part_msdos
# 	insmod ext2
# 	set root='(hd0,msdos3)'
# 	search --no-floppy --fs-uuid --set=root 846859c3-130a-434d-bb39-b2afbc0b61c5
# 	linux	/vmlinuz-2.6.38-16-generic root=UUID=20e5ee5b-0c84-4458-bbc8-512152752109 ro
# 	initrd	/initrd.img-2.6.38-16-generic
# }
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
